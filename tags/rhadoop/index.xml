<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Bhaskar Karambelkar&#39;s Blog</title>
    <link>/tags/rhadoop/index.xml</link>
    <description>Recent content on Bhaskar Karambelkar&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; Bhaskar V. Karambelkar</copyright>
    <atom:link href="/tags/rhadoop/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Installing RHadoop on Cloudera CDH 4.3.0</title>
      <link>/2013/09/installing-rhadoop-on-cloudera-cdh-4.3.0/</link>
      <pubDate>Mon, 09 Sep 2013 14:34:00 +0000</pubDate>
      
      <guid>/2013/09/installing-rhadoop-on-cloudera-cdh-4.3.0/</guid>
      <description>&lt;p&gt;&lt;strong&gt;T&lt;/strong&gt;hese are my notes for installing RHadoop on a Cloudera CDH 4.3.0 Hadoop Cluster.
Although the notes are geared towards installing on CDH, they can be used to install RHadoop on any other Hadoop distro.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;T&lt;/strong&gt;he default installation instructionsas per RHadoop wiki tell you to install the &amp;lsquo;R&amp;rsquo; package from the &lt;a href=&#34;https://fedoraproject.org/wiki/EPEL&#34;&gt;EPEL Repo&lt;/a&gt;. The problem with that is &amp;lsquo;R&amp;rsquo; pulls in &amp;lsquo;R-core-devel&amp;rsquo; package, and that pulls in all sort of &amp;lsquo;build tools&amp;rsquo; including the gcc compiler and and a host of other library &amp;lsquo;dev&amp;rsquo; packages.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;T&lt;/strong&gt;his is a big issue for us, as we&amp;rsquo;re not allowed to have compilers installed on our Production boxes, which if you think about it, is a logical thing to do, considering the security requirements of a production environment.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;W&lt;/strong&gt;ith some efforts I was able to install RHadoop w/o having to install R-core-devel package on our hadoop cluster and these are the notes of that installation.
To be able to install RHadoop on a CDH cluster, w/o having to install &amp;lsquo;R-core-devel&amp;rsquo; package, you need to setup a so called &amp;lsquo;build box&amp;rsquo;, where you&amp;rsquo;ll install everything and push it on to the hadoop cluster.&lt;/p&gt;

&lt;p&gt;Set up a &amp;ldquo;build box&amp;rdquo;, with the same exact OS version, JDK, and Hadoop Version as that of your Hadoop Cluster. We need Hadoop installed to compile RHadoop packages, but we&amp;rsquo;re not going to make this box a part of the hadoop cluster.&lt;/p&gt;

&lt;p&gt;On all boxes, i.e. each Hadoop Node as well as the &amp;lsquo;build box&amp;rsquo; , first setup EPEL yum repository as per instructions on &lt;a href=&#34;https://fedoraproject.org/wiki/EPEL#How_can_I_use_these_extra_packages.3F&#34;&gt;EPEL Wiki&lt;/a&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# As root user  
yum -y --enablerepo=epel install R-core 
#If your system doesn&#39;t allow &#39;root&#39; logins, use &#39;sudo yum ...&#39; instead 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then only on the build box&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# As root user 
# If your system doesn&#39;t allow &#39;root&#39; logins, use &#39;sudo bash -l&#39; instead 
# to start a root shell and do the next 4 steps 
yum -y --enablerepo=epel install R 
export JAVA_HOME=&amp;lt;JDK Base Dir&amp;gt; 
export PATH=$JAVA_HOME/bin:$PATH 
R CMD javareconf 

# everything below can be done as a non-root user.
cat &amp;gt; ~/.Rprofile &amp;lt;&amp;lt;THE_END 
options(repos=structure(c(CRAN=&amp;quot;&amp;lt;CRAN Mirror Closest to you&amp;gt;&amp;quot;)))
THE_END 

cat &amp;gt; ~/.Renviron &amp;lt;&amp;lt; THE_END 
R_LIBS_USER=&amp;quot;/opt/R/library&amp;quot; 
HADOOP_HOME=&amp;quot;&amp;lt;BASE DIRECTORY OF HADOOP&amp;gt;&amp;quot; 
HADOOP_CMD=&amp;quot;&amp;lt;Full PATH of the &#39;hadoop&#39; Command&amp;gt;&amp;quot;
HADOOP_STREAMING=&amp;quot;&amp;lt;Full Path to Hadoop Streaming Jar File&amp;gt;&amp;quot;
LD_LIBRARY_PATH=&amp;quot;${LD_LIBRARY_PATH}:&amp;lt;Path to Hadoop Native Lib dir&amp;gt;&amp;quot; 
JAVA_HOME=&amp;quot;&amp;lt;Path to JDK&amp;gt;&amp;quot; 
R_JAVA_LD_LIBRARY_PATH=&amp;quot;${JAVA_HOME}/lib/amd64/server&amp;quot; 
THE_END 

Rscript -e &amp;quot;install.packages(c(&#39;Rcpp&#39;, &#39;RJSONIO&#39;, &#39;itertools&#39;, &#39;digest&#39;));&amp;quot; 
Rscript -e &amp;quot;install.packages(c(&#39;functional&#39;, &#39;stringr&#39;, &#39;plyr&#39;));&amp;quot; 
Rscript -e &#39;install.packages(&amp;quot;rJava&amp;quot;);&#39; 
Rscript -e &#39;install.packages(&amp;quot;reshape2&amp;quot;);&#39; 
Rscript -e &#39;install.packages(&amp;quot;bitops&amp;quot;);&#39; 
#Download rhdfs rmr2 from RHadoop Github page. 
R CMD INSTALL rhdfs_1.0.5.tar.gz R CMD INSTALL rmr2_2.0.0.tar.gz 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;T&lt;/strong&gt;his should install all the required &amp;lsquo;R&amp;rsquo; packages along with &amp;lsquo;rhdfs&amp;rsquo; and &amp;lsquo;rmr2&amp;rsquo; under /opt/R/library directory on the &amp;lsquo;build&amp;rsquo; box. &lt;/p&gt;

&lt;p&gt;&lt;strong&gt;A&lt;/strong&gt;fter this simply scp/rsync the &lt;code&gt;$HOME/.Renviron&lt;/code&gt; file, and
&lt;code&gt;/opt/R&lt;/code&gt; directory to each hadoop node in the cluster. The &lt;code&gt;.Renviron&lt;/code&gt; file needs to be in the home directory of every user who&amp;rsquo;s going to run a &amp;lsquo;R&amp;rsquo; map-reduce job.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;T&lt;/strong&gt;his should setup RHadoop on your Hadoop Cluster without having to install compiler toolchains on each Hadoop Node.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>